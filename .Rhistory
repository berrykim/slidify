install.packages("economerics")
libary("ctv")
library("ctv")
install.views("Econometrics")
library("ctv")
library()
install.packages("ctv")
library("ctv")
install.views("Econometrics")
search()
library()
library()
?stats
library(help = "stats")
?AIC
??AIC
??big data
??bigdata
??data science
"data"
??data
??data_science
library("ctv")
library("ctv")
install.views("TimeSeries")
?econometrics
??econometrics
?ctv
??ctv
?Econometrics
??Econometrics
clear
clean
a <- 1
b <- 2
c <- 3
x <- c(a, b, c)
y <- c(10, 20, 30, 40, 50)
z <- c(30:45)
y[2]
z[4:7]
x[-2]
y1 <- y[2]
z1 <- z[4:7]
x1 <- x[-2]
a1 <- c(1,2,3,4)
a2 <- c(10,20,30,40)
a3 <- c(100, 200, 300, 400)
a1 <- c(1,2,3,4)
a2 <- c(10,20,30,40)
a3 <- c(100, 200, 300, 400)
A <- cbind(a1, a2, a3)
A
B <- rbind(a1, a2, a3)
B
View(A)
A[1,]
A[,3]
A[1,3]
a1<-vector(length=4)
size(a2)
d(a2)
v1 <- vector(length=5)
v1 <- c(1,2,3,4,5)
v2 <- vector(length=3)
v2[1] <- 10
v2[2] <- 20
v2[3] <- 30
v2 <- vector(length=3)
v2[1] <- 10
v2[2] <- 20
v2[3] <- 30
M1 <- matrix(nrow=2, ncol=3)
M1[1,] <- c(1,2,3)
M1[2,] <- c(10, 20, 30)
M2 <- matrix(nrow=3, ncol=4)
M2[,1] <- c(1,1,1)
M2[,2] <- c(2,2,2)
M2[,3] <- c(3,3,3)
M2[,4] <- c(4,4,4)
dim(M1)
dim(M2)
# list()
a <- 1
x <- c(a, b, c)
x <- c(a, b, c)
b <- 2
c <- 3
x <- c(a, b, c)
xy<-c(2.3,4)
L1 <- list(a, x, v2, M2)
L1[[1]]
L1[[2]]
L3[[3]]
L4[[4]]
L1[[3]]
L1[[4]]
I1 <- c(3.65, 3.60, 3.65, 3.69, 3.63, 3.61, 3.35, 3.40, 3.43, 3.39, 3.43)
F1 <- c(1196.80, 1190.60, 1181.00, 1177.80, 1171.20, 1176.40, 1176.20, 1169.10, 1166.40, 1161.40, 1161.40)
K1 <- c(1764.69, 1775.73, 1780.02, 1792.42, 1787.74, 1779.22, 1784.36,1802.58, 1818.86, 1815.25, 1823.88)
D1 <- c(10269.47, 10320.10, 10447.93, NA, 10340.69, 10387.01, 10415.24, 10462.77, 10544.13, 10526.49, 10572.73)
Dfrm <- data.frame(INT=I1, FX=F1, KOSPI=K1, DOW=D1)
Dfrm$INT
Dfrm$FX
Dfrm$KOSPI
Dfrm$DOW
attach(Dfrm)
INT
?dFX
KOSPI
DOW
# read.table
EconData <- read.delim("F:/QuantGlobal/Week1/RBook/EconData.txt")
View(EconData)
EconData2 <- read.delim("F:/QuantGlobal/Week1/RBook/EconData2.txt", header=F)
View(EconData2)
View(EconData)
View(EconData)
View(EconData)
View(EconData)
ED3<-scan(file=("F:/QuantGlobal/Week1/RBook/EconData2.txt")
> ED3<-scan(file=("F:/QuantGlobal/Week1/RBook/EconData2.txt"))
ED3<-scan(file=("F:/QuantGlobal/Week1/RBook/EconData2.txt"))
View(Dfrm)
write.table(Dfrm, file="F:/QuantGlobal/Week1/RBook/TestData.txt", sep=" ", col.names=TRUE, row.names=FALSE, na="NA", quote=FALSE, append=FALSE)
KOSPI_Monthly_2009_2013 <- read.delim("F:/QuantGlobal/Week1/RBook/KOSPI_Monthly_2009_2013.txt")
View(KOSPI_Monthly_2009_2013)
View(KOSPI_Monthly_2009_2013)
KM<-KOSPI_Monthly_2009_2013
View(KOSPI_Monthly_2009_2013)
New.KM.ts <- window(KM.ts, start=c(2011,5), end=c(2013,9))
KM.ts <- ts(KM[,2], start=c(2009,1), end=c(2013,12), freq=12)
KM.ts
New.KM.ts <- window(KM.ts, start=c(2011,5), end=c(2013,9))
New.KM.ts
plot(x=KM$Date, y=KM$Close)
plot(KM$Close)
plot(x=KM$Date, y=KM$Close)
plot(KM$Close)
plot(KM$Close, type="l")
plot.ts(KM.ts)
plot(x=KM$Date, y=KM$Close)
plot.ts(KM.ts)
plot(KM$Close, type="l")
plot.ts(KM.ts)
plot(x=KM$Date, y=KM$Close)
plot.ts(KM.ts)
search()
?lm()
LR <- lm(EconData$KOSPI~ED1$INT+ED1$FX)
LR <- lm(EconData$KOSPI~EconData$INT+EconData$FX)
LR
names(LR)
sum(LR)
s(LR)
summary(LR)
residuals
residuals(LR)
clear
view(news())
install.packages('knitr', dependencies = TRUE)
install.packages(c("foreign", "lattice", "robustbase", "rpart", "Rssa", "stochvol", "tfplot", "TSclust", "tsfa"))
install.packages("kernlab")
library(kernlab)
head(kernlab)
summary(kernlab)
data(spam)
head(spam)
View(spam)
set.seed(3435)
trainIndicator = rbinom(4601, size = 1, prob = 0.5)
table(trainIndicator)
trainSpam = spam(trainIndicator == 1,]
trainSpam = spam(trainIndicator == 1,)
trainSpam = spam[trainIndicator == 1,]
testSpam = spam[trainIndicator == 0, ]
names(trainSpam)
head(trainSpam,2)
table(trainSpam$type)
plot(trainSpam$capialAve ~ trainSpam$type)
names(trainSpam)
View(spam)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
library(XML)
doc <- xmlInternalTreeParse(fileUrl)
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
library(XML)
doc <- xmlInternalTreeParse(fileUrl)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
xpathSApply(rootNode, "//node", xmlValue)
xpathSApply(rootNode, "/node", xmlValue)
xpathSApply(rootNode, "node[@zipcode=21231]", sum)
xpathSApply(rootNode, "node[@zipcode=21231]", table)
xpathSApply(rootNode, "node[@zipcode=21231]", summary)
xpathSApply(rootNode, "//li[@zipcode=21231]", xmlValue)
xpathSApply(rootNode, "//li[@zipcode='21231']", xmlValue)
xpathSApply(rootNode, "//zipcode", xmlValue)
xpathSApply(rootNode, "//zipcode", xmlValue=21231)
xpathSApply(rootNode, "//zipcode", table(xmlValue=="21231")
)
xpathSApply(rootNode, "//zipcode", table(xmlValue))
xpathSApply(rootNode, "//zipcode", table(zipcode)
)
xpathSApply(rootNode, "//zipcode", xmlValue)
a<-numeric(xpathSApply(rootNode, "//zipcode", xmlValue))
a<-xpathSApply(rootNode, "//zipcode", xmlValue)
table(a)
(1+1+2+3+6+10+75)/7
10*0.05^9*0.95
(0.05/0.95)*(0.9/0.5)^9
0.05*0.9^9/(0.05*0.9^9+0.95*0.5^9)
0.05*0.9^9*11
4*(1-9.9)^2+(2-9.9)^2+(3-9.9)^2+(90-9.9)^2
sqrt(684.287)
0.9^9
0.387*1024
(0.05/0.95)*39.6
2.084/3.084
train <- read.csv("D:/11 Rdata/titanic/train.csv")
View(train)
genderclassmodel <- read.csv("D:/11 Rdata/titanic/genderclassmodel.csv")
View(genderclassmodel)
gendermodel <- read.csv("D:/11 Rdata/titanic/gendermodel.csv")
View(gendermodel)
674.16/(1.06)^2
600/(1-1/1.06)
load("D:/causal inference/ssaone.RData")
names(x)
head(x,1)
head(x,3)
table(x$afqtgrp)
tapply(x, table)
tapply(x)
table(x[1:10,])
tapply(x, summary)
tapply(x[,1:10], summary)
apply(x[,1:10], summary)
sapply(x[,1:10], summary)
sapply(x[,1:10], table)
sapply(x[,1:10], summary)
install.packages("rdd")
library(rdd)
set.seed(100)
x <- rnorm(200, 0, 10)
z <- ifelse(x<0, 1, 0)
tx <- which(z==1)
#Randomly sample from T~N(50, 100) and specify the regression function.
library(rdd)
set.seed(100)
x <- rnorm(200, 0, 10)
z <- ifelse(x<0, 1, 0)
tx <- which(z==1)
set.seed(101)
y <- rnorm(200, 50, 10) + 10*z + 0.5*x - 0.025*x^2 #1 σ effect size
plot(y ~ x, col=NULL, xlab="Assignment", ylab="Outcome", ylim=c(min(y)-10, max(y)+10))
abline(v=0, lty=2, lwd=2, col="darkgrey")
points(x[tx], y[tx], col="darkgrey", pch=4)
points(x[-tx], y[-tx], col="darkgrey")
curve(50 + 10 + 0.5*x - 0.025*x^2, min(x)-10, 0, add=T, lwd=2)
curve(50 + 0.5*x - 0.025*x^2, 0, max(x)+10, add=T, lwd=2)
title(main="Large effect at cutoff; continuous quadratic relationship\n")
mtext(expression(italic(Y[i]) == 50 + 10*italic(Z[i]) + 0.5*italic(X[i]) - 0.025*italic(X[i])^2 + italic(epsilon[i])), line=.5)
model <- lm(y ~ z + x + I(x^2))
print(xtable(model), type="html")
library("xtable", lib.loc="C:/Program Files/R/R-3.1.0/library")
print(xtable(model), type="html")
model
summary(model)
coefs <- coefficients(model)
curve(coefs[1] + coefs[2] + coefs[3]*x + coefs[4]*x^2, min(x)-10, 0, add=T, col="blue")
curve(coefs[1] + coefs[3]*x + coefs[4]*x^2, 0, max(x)+10, add=T, col="blue")
legend("bottomright", bg="white", cex=.75, pt.cex=.75, c("Treatment observation ", "Control observation", "Cutoff", "Population regression line ", "Fitted line"), lty=c(NA, NA, 2, 1, 1), lwd=c(NA, NA, 2, 2, 1), col=c("darkgrey", "darkgrey", "darkgrey", "black", "blue"), pch=c(4, 1, NA, NA, NA))
model <- lm(y ~ z + x)
summary(model)
coefs <- coefficients(model)
curve(coefs[1] + coefs[2] + coefs[3]*x, min(x)-10, 0, add=T, col="red")
curve(coefs[1] + coefs[3]*x, 0, max(x)+10, add=T, col="red")
legend("bottomright", bg="white", cex=.75, pt.cex=.75, c("Treatment observation ", "Control observation", "Cutoff", "Population regression line ", "Fitted line", "Misspecified fitted line"), lty=c(NA, NA, 2, 1, 1, 1), lwd=c(NA, NA, 2, 2, 1, 1), col=c("darkgrey", "darkgrey", "darkgrey", "black", "blue", "red"), pch=c(4, 1, NA, NA, NA, NA))
792.26 132.00 2188.49 19270.86 1402.95 320.29 116.20 983.32 95.59 369.00 745.22 40.00 72.00 771.00 60.00 722.61 88.87 1783.92 124.00 7453.00 111.00 77.00 12486.08 268.03 140.00
x<-792.26 132.00 2188.49 19270.86 1402.95 320.29 116.20 983.32 95.59 369.00 745.22 40.00 72.00 771.00 60.00 722.61 88.87 1783.92 124.00 7453.00 111.00 77.00 12486.08 268.03 140.00
x<-c(792.26, 132.00, 2188.49, 19270.86, 1402.95, 320.29, 116.20, 983.32, 95.59, 369.00, 745.22, 40.00, 72.00, 771.00, 60.00, 722.61, 88.87, 1783.92, 124.00, 7453.00, 111.00, 77.00, 12486.08, 268.03, 140.00)
sort(x)
y<-sort(x)
y[13]
mean(y)
summary(y)
x<-c(792.26, 132.00, 2188.49, 19270.86, 1402.95, 320.29, 116.20, 983.32, 95.59, 369.00, 745.22, 40.00, 72.00, 771.00, 60.00, 722.61, 88.87, 1783.92, 124.00, 7453.00, 111.00, 77.00, 12486.08, 268.03, 140.00)
y<-sort(x)
summary(y)
z<-log(y)
?log
z<-log10(y)
cbind(y,z)
plot(y)
boxplot(y)
boxplot(z)
summary(y)
log10(median(y))
median(z)
3>=2
x<- 3>=2
x = 3>=2
x = (3>=2)
x = (1>=2)
a=c(1,2)
b=c(1,0)
x = (a>=b)
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
require(rCharts)
install.packages("rCharts")
library(devtools)
install.packages("devtools")
library("devtools", lib.loc="C:/Users/user/Documents/R/win-library/3.1")
install_github("ramnathv/rCharts@dev")
install_github("ramnathv/rCharts@dev")
require(devtools)
install_github('rCharts', 'ramnathv')
require(rCharts)
head(airquality)
dTable(airquality, sPaginationType = "full_numbers")
x <- y^2 + 3*g(z,2)
data()
oddcount <- function(x){
k <- 0
for (n in x) {
if (n %% 2 == 1) k <- k+1
}
return k
oddcount <- function(x){
k <- 0
for (n in x) {
if (n %% 2 == 1) k <- k+1
}
return (k)
}
oddcount(c(1,3,4,4,4,2))
list(kids=c("John","Amy"), age=c(10,12))
a<-list(kids=c("John","Amy"), age=c(10,12))
a
str(a)
mode(a)
class(a)
data.frame(a)
b<-data.frame(a)
str(b)
a$kids
b$kids
a$age
b$age
data.frame(rnorm(100),rnorm(100,2,4),rnorm(100,4,4))
d<-data.frame(rnorm(100),rnorm(100,2,4),rnorm(100,4,4))
head(d)
d<-data.frame(a=rnorm(100),b=rnorm(100,2,4),c=rnorm(100,4,4))
head(d)
lm(b~a)
lm(b~a,data=d)
e<-lm(b~a,data=d)
e
class(e)
mode(e)
str(e)
attributes(e)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
library(kernlab)
data(spam)
head(spam)
names(spam)
head(spam$your)
head(spam$your, spam$type)
head(spam[c("your", "type")])
plot(your~type, data=spam)
plot(density(spam$your[spam$type=="nonspam"]),
col="blue",main="",xlab="Frequency of 'your'")
lines(density(spam$your[spam$type=="spam"]),col="red")
prediction <- ifelse(spam$your > 0.5,"spam","nonspam")
table(prediction,spam$type)/length(spam$type)
R.home()
library("AER", lib.loc="C:/Program Files/R/R-3.1.0/library")
library("knitr", lib.loc="C:/Program Files/R/R-3.1.0/library")
install.packages("RMySQL", type = "source")
Sys.setenv(MYSQL_HOME = “D:\APM_Setup\Server\MySQL5")
Sys.setenv(MYSQL_HOME="D:\APM_Setup\Server\MySQL5")
Sys.setenv(MYSQL_HOME= "D:\APM_Setup\Server\MySQL5")
Sys.setenv(MYSQL_HOME= "D:\APM_Setup\Server\MySQL5")
getwd()
Sys.setenv(MYSQL_HOME= "D:/APM_Setup/Server/MySQL5")
Sys.getenv(“MYSQL_HOME”)
Sys.getenv("MYSQL_HOME")
install.packages("RMySQL", type = "source")
Sys.setenv(MYSQL_HOME= "D:/APM_Setup/Server/MySQL5/bin")
Sys.getenv("MYSQL_HOME")
install.packages("RMySQL", type = "source")
?sqldf
library(slidify)
getwd()
setwd("D:/00 MOOC/01 JOHNS HOPKINS/JOHNS data products/courseproject/slidifyproject")
library(slidify)
author("dataproductslidify")
slidify(index.Rmd)
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
rnorm(n=10, mean=0, sd=1) # standard normal
hist(rnorm(n=100, mean=1, sd=2))
hist(rnorm(n=100, mean=1, sd=2), mar=c(1,1,1,1))
hist(rnorm(n=100, mean=1, sd=2), mar=c(4,4,4,4))
hist(rnorm(n=100, mean=1, sd=2), mar=c(0,0,0,0))
par(mar = c(3, 3, 1, 1))
hist(rnorm(n=100, mean=1, sd=2)
)
hist(rnorm(n=100, mean=1, sd=2), col='lightblue')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
getwd()
publish_github(berrykim, courseproject)
publish_github('berrykim', 'courseproject')
publish_github('berrykim', 'slidifyproject')
